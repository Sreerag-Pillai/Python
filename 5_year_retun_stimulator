# -*- coding: utf-8 -*-
"""5-Year_Return_Stimulator_Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zhQYMjaRTMQGyIzYgVr8967kzhIcBs4C
"""

#**********************  5_year_retun_stimulator.py  ************************************************************************************************
#
# Assignment: 5-year-return-stimulator
#
# Algorythm: Program will ask user to select choice of their asset to invest and will output the total return, net gain and finally a graph 
#            showing the growth of portfolio  
#
#Making a dictionary with key as all the stocks and crypto with their corresponding return over 5 #years and value as their return.
#Defining a function to calculate return on investment
#Asking the user to enter any key to start investing
#Assigning it with user_input = input()
#Asking the user to 'Enter the amount you want to invest in total: '
#Assigning it with total_amount = float(input())
# Making a while loop which will break when user_input == 'stop':
# Make a list for graphing the portfolio growth
# Creating an empty list for that named  total_portfolio_value = []
# Assigning total_value = 0
# Making variable a  and assigning it with 0
# Making variable b  and assigning it with -1
# Creating a nester while loop which will break if user_input == 'stop':
# Converting a = int(a) for indexing
# Converting b = int(b) for indexing purpose
# Asking users which asset would they like to invest in and giving two options to invest as:
# Print('Which asset would you like to invest', list1[a], 'or', list1[b])
# Assigning the input with asset_input = str(input()  
# Asking users how much they want to put into the asset they chose
# Assigning it with invest_amount = float(input())
# Creating an if branch which will stop the iteration and restart if  invest_amount > total_amount:
# it will also print('oops the amount you input exceeds the money you have in total please renter
# Utilized continue statement to utilize that
# Creating an else branch
# Creating a nested if brach which will calculate and print return if asset_input in assets_dict:
# Creating a variable prof  to assign profit in individual investment by recalling definition called #roi(assets_dict[asset_input],invest_amount)
# Printing and calculating return investment   
# Printing 5 years your total portfolio value became: {total_value:.2f}
# Appending total value to the total value list
# Asking users if they want to continue to invest or else enter stop            
# user_input = str(input())
# for iteration purposes b -= 1
# for iteration purposes a += 1
# Printing final investment gained user in 5 years
# Asking user if they would like to start new investment
#  user_input = input()
#print graph using mat plot lib or seaborn library
#****************************************************************************************************************************************************

#making a dictionary with key as all the stocks and crypto with their coresponding return over 5 years and value as their return

assets_dict = {'google': 0.8369,'cvs': 0.3441,'jp morgan':0.2195, 'bank of america':0.2842,'microsoft':1.7601,
                'berkshire hathway':0.54, 'meta':-0.2702, 'amazon': 1.1010, 'netflix':0.4965, 'apple': 2.6, 
                'tesla':9.5, 'ups': 0.39, 'mcdonalds':0.55, 'adobe': 0.80, 'nike': 0.65, 'ea': 0.08, 'home depot':0.73,
                'costco':2.07, 'ford':0.06, 'gm':0.15, 'moderna':6.63, 'pfizer':0.36, 'disney':0.06, 
                'nvdia':1.55, 'snp500':0.48, 'nasdaq':0.83,'dow':0, 'zoom':0.34, 'paypal':0.24, 'amd':4.04, 'bitcoin':1.08,
                'ether':1.38, 'xrp': 2.2, 'solana': 23.03, 'polkadot': 1.41, 'binance': 6.19,
                'doge':3.54, 'enphase':213.64, 'cosmos':2.2, 'algo': 0.44}


#creating the list for all the stocks and crypto

list1 = ['google','cvs','jp morgan chase', 'bank of america','microsoft','berkshire hathway', 'meta', 'amazon', 'netflix', 'apple', 'tesla', 'ups', 'mcdonalds', 'adobe', 'nike', 'ea', 'home depot', 'costco', 'ford', 'gm', 'moderna', 'pfizer', 'disney', 'nvdia', 'snp500', 'nasdaq', 'dow', 'zoom', 'paypal', 'amd', 'bitcoin', 'ether', 'xrp', 'solana', 'polkadot', 'binance', 'doge', 'cosmos', 'enphase', 'algo']

#defining a function to calculate return on investment
def roi(percentage,amount):
    net = percentage*amount + amount
    return net

print(f'Press any key to start investing:', end=' ')
user_input = input()

print(f'Enter amount you want invest in total: ', end = ' ')
total_amount = float(input())
print() 


while user_input != 'stop':


#making a list for graphing the portfolio growth
    total_portfolio_value = []
    Asset_Names = []
    total_value = 0

    a = 0
    b = -1
    while user_input != 'stop':
        a = int(a)
        b = int(b)
#asking user which asset would they like to invest
        print('Which asset would you like to invest', list1[a], 'or', list1[b])
        print('Enter the name of the asset you choose below')
        asset_input = str(input())
        print()
        Asset_Names.append(asset_input)
        
#asking user how much do they want to put in to the asset
        print(f'how much do you want to invest in to the asset:',end = ' ')
        invest_amount = float(input())
        print()
            
        if invest_amount > total_amount:
            print('oops the amount you input exceeds the money you have in total')
            print('please renter')
            print()
            continue
        else:
            if asset_input in assets_dict:
                prof = roi(assets_dict[asset_input],invest_amount)
                print(f'your net gain in 5 years is {(prof - invest_amount):.2f}')
                print()
                if a == 0:
                    total_value = prof -invest_amount + total_amount
                else:
                    total_value = prof - invest_amount + total_value
                
                
            total_amount = total_value
            print(f'In 5 years your total portfolio value became: {total_value:.2f}')
            print()
            print()
                
            total_portfolio_value.append(total_amount)
                
            print()
            print(f'Do you want to continue investing:\n enter any key to start or enter \'stop\' to exit', end = ' ')
            user_input = str(input())
            print()
                
            
            b -= 1
            a += 1
# have to break for loop if user input is stop

    print('Your investing gained you a 5 year return of: ', f'{total_amount:.3f}')
    print()
#code for graph
#importing method pyplot from matplotlib library as plt to draw bar graph (source: https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.hist.html )
    import matplotlib.pyplot as plt

    plt.figure(figsize=(20,7))
    plt.plot(Asset_Names, total_portfolio_value)
    plt.ylabel('Portfolio Values')
    plt.xlabel('Name of asset invested')
    plt.show()
    print() 
    
    print(f'Would you like to start a new stimulation? \n\nEnter any key to continue or Enter \'stop\' to exit ', end = ' ')
    user_input = input()
    
    print()
