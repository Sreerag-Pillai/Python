# -*- coding: utf-8 -*-
"""PillaiS_Author_book_table_graph.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PS0kT8g32vgi2VjP0lz0MmBjCFYVQYCu
"""

#**********************  Idle_7_library_visualization.py  ************************************************************************************************
#
# Name: Sreerag M. Pillai
#
# Course: CSCI 1470.01
#
# Assignment: Idle programming assignment #7
#
# Algorythm: Program will take user input for author name and their number of book written and output's a table from the user 
#            data and a bar chart by mapping auntor name against number of books they have written.
#
#creating and asking user to input header for both coloumns
#asking user to 'Enter the column 1 header:'
#header_1 = getting input from the user
#printing heading 1
#asking user to 'Enter the column 2 header:'
#header_2 = getting input from the user
#printing heading 2
#
#creating and asking user to input author name and  number of books
#print(author_name)
#print('Author:', author_name)
#print('Number of Books:', num_books)
#
#
#header_list = [header_1, header_2]
#creating empty lists
#author_list = []
#num_books_list = []
#while True:
#  if user input for author_name == '-1':
#    break
#  else:
#    author_list.append(author_name)
#    num_books_list.append(num_books)
#    print('Enter an author (-1 to stop input):', end = ' ')
#    author_name = str(input())
#    print(author_name)
#
#    print('Enter the number of books written by this author:', end = ' ')
#    num_books = int(input())
#    print(num_books)
#
#    print('Author:', author_name)
#    print('Number of Books:', num_books)
#creating table and using proper ligment funstions for each rows
#
#print(f'{header_list[0]: <20}|{header_list[1]: >23}')
#print('-' * 44)
#
#i=0
#for i in range(len(author_list)):
#    print(f'{author_list[i]: <20}|{num_books_list[i]: >23}')
#
#importing method pyplot from matplotlib library as plt to draw bar graph 
#(source: https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.hist.html )
#plt.figure(figsize=(20,7))
#plt.bar(author_list, num_books_list)
#plt.xlabel('Authors name')
#plt.ylabel('Number of books published')
#plt.show()
#
#****************************************************************************************************************************************************

#creating and asking user to input header for both coloumns
print('Enter the column 1 header:', end = ' ')
header_1 = input()
print('You entered:', header_1)

print('Enter the column 2 header:', end = ' ')
header_2 = input()
print('You entered:', header_2)

#creating and asking user to input author name and  number of books
print('Enter an author (-1 to stop input):', end = ' ')
author_name = str(input())
print(author_name)

print('Enter the number of books written by this author:', end = ' ')
num_books = int(input())
print(num_books)

print('Author:', author_name)
print('Number of Books:', num_books)


header_list = [header_1, header_2]

author_list = []
num_books_list = []
while True:
  if author_name == '-1':
    break
  else:
    author_list.append(author_name)
    num_books_list.append(num_books)
    print('Enter an author (-1 to stop input):', end = ' ')
    author_name = str(input())
    print(author_name)

    print('Enter the number of books written by this author:', end = ' ')
    num_books = int(input())
    print(num_books)

    print('Author:', author_name)
    print('Number of Books:', num_books)

#creating table and using proper ligment funstions for each rows

print(f'{header_list[0]: <20}|{header_list[1]: >23}')
print('-' * 44)

i=0
for i in range(len(author_list)):
    print(f'{author_list[i]: <20}|{num_books_list[i]: >23}')

#imprting method pyplot from matplotlib library as plt to draw bar graph (source: https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.hist.html )
import matplotlib.pyplot as plt

plt.figure(figsize=(20,7))
plt.bar(author_list, num_books_list)
plt.xlabel('Authors name')
plt.ylabel('Number of books published')
plt.show()

